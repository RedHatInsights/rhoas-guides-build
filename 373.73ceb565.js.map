{"version":3,"file":"373.73ceb565.js","mappings":"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","sources":["webpack://guides/./src/app/QuickStartCatalogFederated.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport {\n  TextContent,\n  Text,\n  Divider,\n  Gallery,\n  GalleryItem,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport {\n  getQuickStartStatus,\n  QuickStartContextValues,\n  QuickStartContext,\n  QuickStartTile,\n  filterQuickStarts,\n  QuickStartCatalogEmptyState,\n  QUICKSTART_SEARCH_FILTER_KEY,\n  QuickStartCatalogFilterSearchWrapper,\n  QuickStartCatalogFilterCountWrapper,\n  QuickStartCatalog,\n  QuickStartCatalogSection,\n  QuickStartCatalogHeader,\n  QuickStartCatalogToolbar,\n} from \"@patternfly/quickstarts\";\nimport { GuidesQuickStart } from \"./procedure-parser\";\nimport \"./Catalog.css\";\n\nconst MasQuickStartCatalog: React.FC = () => {\n  const { activeQuickStartID, allQuickStartStates, allQuickStarts } =\n    React.useContext<QuickStartContextValues>(QuickStartContext);\n\n  const initialQueryParams = new URLSearchParams(window.location.search);\n  const initialSearchQuery =\n    initialQueryParams.get(QUICKSTART_SEARCH_FILTER_KEY) || \"\";\n\n  const sortFnc = (q1: GuidesQuickStart, q2: GuidesQuickStart) => {\n    const q1Order = q1.metadata.annotations?.order;\n    const q2Order = q2.metadata.annotations?.order;\n    if (q1Order && !q2Order) {\n      return -1;\n    } else if (!q1Order && q2Order) {\n      return 1;\n    } else if (!q1Order && !q2Order) {\n      return q1.spec.displayName.localeCompare(q2.spec.displayName);\n    } else if (q1Order && q2Order) {\n      return q1Order - q2Order;\n    }\n    return 0;\n  };\n\n  const initialFilteredQuickStarts = filterQuickStarts(\n    allQuickStarts,\n    initialSearchQuery,\n    [],\n    allQuickStartStates\n  ).sort(sortFnc);\n\n  const [filteredQuickStarts, setFilteredQuickStarts] = React.useState<\n    GuidesQuickStart[]\n  >(initialFilteredQuickStarts);\n\n  const onSearchInputChange = (searchValue: string) => {\n    const result = filterQuickStarts(\n      allQuickStarts,\n      searchValue,\n      [],\n      allQuickStartStates\n    ).sort(sortFnc);\n    setFilteredQuickStarts(result);\n  };\n\n  const CatalogWithSections = (\n    <>\n      <QuickStartCatalogSection>\n        <TextContent>\n          <Text component=\"h2\">Quick starts</Text>\n          <Text component=\"p\" className=\"mk-catalog-sub\">\n            Step-by-step instructions and tasks\n          </Text>\n        </TextContent>\n        <Gallery className=\"pfext-quick-start-catalog__gallery\" hasGutter>\n          {allQuickStarts\n            .filter(\n              (quickStart) =>\n                !quickStart.spec.type ||\n                quickStart.spec.type.text !== \"Documentation\"\n            )\n            .sort(sortFnc)\n            .map((quickStart) => {\n              const {\n                metadata: { name: id },\n              } = quickStart;\n\n              return (\n                <GalleryItem\n                  key={id}\n                  className=\"pfext-quick-start-catalog__gallery-item\"\n                >\n                  <QuickStartTile\n                    quickStart={quickStart}\n                    isActive={id === activeQuickStartID}\n                    status={getQuickStartStatus(allQuickStartStates, id)}\n                  />\n                </GalleryItem>\n              );\n            })}\n        </Gallery>\n      </QuickStartCatalogSection>\n      <QuickStartCatalogSection>\n        <Divider />\n      </QuickStartCatalogSection>\n      <QuickStartCatalogSection>\n        <TextContent>\n          <Text component=\"h2\">Documentation</Text>\n          <Text component=\"p\" className=\"mk-catalog-sub\">\n            Technical information for using the service\n          </Text>\n        </TextContent>\n        <Gallery className=\"pfext-quick-start-catalog__gallery\" hasGutter>\n          {allQuickStarts\n            .filter(\n              (quickStart) => quickStart.spec.type?.text === \"Documentation\"\n            )\n            .sort(sortFnc)\n            .map((quickStart) => {\n              const {\n                metadata: { name: id },\n              } = quickStart;\n\n              return (\n                <GalleryItem\n                  key={id}\n                  className=\"pfext-quick-start-catalog__gallery-item\"\n                >\n                  <QuickStartTile\n                    quickStart={quickStart}\n                    isActive={id === activeQuickStartID}\n                    status={getQuickStartStatus(allQuickStartStates, id)}\n                  />\n                </GalleryItem>\n              );\n            })}\n        </Gallery>\n      </QuickStartCatalogSection>\n    </>\n  );\n\n  const clearFilters = () => {\n    setFilteredQuickStarts(allQuickStarts.sort(sortFnc));\n  };\n\n  return (\n    <>\n      <QuickStartCatalogHeader title=\"Resources\" />\n      <Divider component=\"div\" />\n      <QuickStartCatalogToolbar>\n        <ToolbarContent>\n          <QuickStartCatalogFilterSearchWrapper\n            onSearchInputChange={onSearchInputChange}\n          />\n          <QuickStartCatalogFilterCountWrapper\n            quickStartsCount={filteredQuickStarts.length}\n          />\n        </ToolbarContent>\n      </QuickStartCatalogToolbar>\n      <Divider component=\"div\" />\n      {filteredQuickStarts.length === 0 ? (\n        <QuickStartCatalogEmptyState clearFilters={clearFilters} />\n      ) : filteredQuickStarts.length !== allQuickStarts.length ? (\n        <QuickStartCatalog quickStarts={filteredQuickStarts} />\n      ) : (\n        CatalogWithSections\n      )}\n    </>\n  );\n};\n\nconst QuickStartCatalogFederated: FunctionComponent = () => (\n  <MasQuickStartCatalog />\n);\n\nexport default QuickStartCatalogFederated;"],"names":["MasQuickStartCatalog","QuickStartContext","activeQuickStartID","allQuickStartStates","allQuickStarts","initialSearchQuery","URLSearchParams","window","location","search","get","QUICKSTART_SEARCH_FILTER_KEY","sortFnc","q1","q2","q1Order","metadata","annotations","order","q2Order","spec","displayName","localeCompare","initialFilteredQuickStarts","filterQuickStarts","sort","filteredQuickStarts","setFilteredQuickStarts","CatalogWithSections","QuickStartCatalogSection","TextContent","Text","component","className","Gallery","hasGutter","filter","quickStart","type","text","map","id","GalleryItem","key","QuickStartTile","isActive","status","getQuickStartStatus","Divider","QuickStartCatalogHeader","title","QuickStartCatalogToolbar","ToolbarContent","QuickStartCatalogFilterSearchWrapper","onSearchInputChange","searchValue","result","QuickStartCatalogFilterCountWrapper","quickStartsCount","length","QuickStartCatalogEmptyState","clearFilters","QuickStartCatalog","quickStarts"],"sourceRoot":""}