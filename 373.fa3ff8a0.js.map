{"version":3,"sources":["webpack://guides/./src/app/QuickStartCatalogFederated.tsx"],"names":["MasQuickStartCatalog","quickStarts","QuickStartContext","activeQuickStartID","allQuickStartStates","initialSearchQuery","URLSearchParams","window","location","search","get","QUICKSTART_SEARCH_FILTER_KEY","sortFnc","q1","q2","q1Order","metadata","annotations","order","q2Order","spec","displayName","localeCompare","initialFilteredQuickStarts","filterQuickStarts","sort","filteredQuickStarts","setFilteredQuickStarts","CatalogWithSections","PageSection","TextContent","Text","component","Gallery","className","hasGutter","filter","quickStart","type","text","map","id","GalleryItem","key","QuickStartTile","isActive","status","getQuickStartStatus","Divider","variant","PageSectionVariants","padding","default","Toolbar","usePageInsets","ToolbarContent","QuickStartCatalogFilterSearchWrapper","onSearchInputChange","searchValue","result","QuickStartCatalogFilterCountWrapper","quickStartsCount","length","QuickStartCatalogEmptyState","clearFilters","clearQuickStartFilters","QuickStartCatalog","QuickStartsLoader","loaded","LoadingBox"],"mappings":"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","file":"373.fa3ff8a0.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Divider,\n  Gallery,\n  GalleryItem,\n  Toolbar,\n  ToolbarContent,\n} from \"@patternfly/react-core\";\nimport {\n  getQuickStartStatus,\n  QuickStartContextValues,\n  QuickStartContext,\n  QuickStartTile,\n  filterQuickStarts,\n  QuickStartCatalogEmptyState,\n  QUICKSTART_SEARCH_FILTER_KEY,\n  QuickStartCatalogFilterSearchWrapper,\n  QuickStartCatalogFilterCountWrapper,\n  clearQuickStartFilters,\n  QuickStartsLoader,\n  LoadingBox,\n  QuickStartCatalog,\n} from \"@cloudmosaic/quickstarts\";\nimport { GuidesQuickStart } from './procedure-parser';\n\ntype MasQuickStartCatalogProps = {\n  quickStarts: GuidesQuickStart[];\n};\n\nconst MasQuickStartCatalog: React.FC<MasQuickStartCatalogProps> = ({\n  quickStarts,\n}) => {\n  const {\n    activeQuickStartID,\n    allQuickStartStates,\n  } = React.useContext<QuickStartContextValues>(QuickStartContext);\n\n  const initialQueryParams = new URLSearchParams(window.location.search);\n  const initialSearchQuery =\n    initialQueryParams.get(QUICKSTART_SEARCH_FILTER_KEY) || \"\";\n\n  const sortFnc = (q1: GuidesQuickStart, q2: GuidesQuickStart) => {\n    const q1Order = q1.metadata.annotations?.order;\n    const q2Order = q2.metadata.annotations?.order;\n    if (q1Order && !q2Order) {\n      return -1;\n    } else if (!q1Order && q2Order) {\n      return 1;\n    } else if (!q1Order && !q2Order) {\n      return q1.spec.displayName.localeCompare(q2.spec.displayName);\n    } else if (q1Order && q2Order) {\n      return q1Order - q2Order;\n    }\n    return 0;\n  }\n\n  const initialFilteredQuickStarts = filterQuickStarts(\n    quickStarts,\n    initialSearchQuery,\n    [],\n    allQuickStartStates\n  ).sort(sortFnc);\n\n  const [filteredQuickStarts, setFilteredQuickStarts] = React.useState<\n  GuidesQuickStart[]\n  >(initialFilteredQuickStarts);\n\n  const onSearchInputChange = (searchValue: string) => {\n    const result = filterQuickStarts(\n      quickStarts,\n      searchValue,\n      [],\n      allQuickStartStates\n    ).sort(sortFnc);\n    setFilteredQuickStarts(result);\n  };\n\n  const CatalogWithSections = (\n    <>\n      <PageSection>\n        <TextContent>\n          <Text component=\"h2\">Quick starts</Text>\n          <Text component=\"p\">Step-by-step instructions and tasks</Text>\n        </TextContent>\n        <Gallery className=\"co-quick-start-catalog__gallery\" hasGutter>\n          {quickStarts\n            .filter(\n              (quickStart) =>\n                !quickStart.spec.type ||\n                quickStart.spec.type.text !== \"Documentation\"\n            )\n            .sort(sortFnc)\n            .map((quickStart) => {\n              const {\n                metadata: { name: id },\n              } = quickStart;\n\n              return (\n                <GalleryItem key={id}>\n                  <QuickStartTile\n                    quickStart={quickStart}\n                    isActive={id === activeQuickStartID}\n                    status={getQuickStartStatus(allQuickStartStates, id)}\n                  />\n                </GalleryItem>\n              );\n            })}\n        </Gallery>\n      </PageSection>\n      <PageSection>\n        <Divider />\n      </PageSection>\n      <PageSection>\n        <TextContent>\n          <Text component=\"h2\">Documentation</Text>\n          <Text component=\"p\">Technical information for using the service</Text>\n        </TextContent>\n        <Gallery className=\"co-quick-start-catalog__gallery\" hasGutter>\n          {quickStarts\n            .filter(\n              (quickStart) => quickStart.spec.type?.text === \"Documentation\"\n            )\n            .sort(sortFnc)\n            .map((quickStart) => {\n              const {\n                metadata: { name: id },\n              } = quickStart;\n\n              return (\n                <GalleryItem key={id}>\n                  <QuickStartTile\n                    quickStart={quickStart}\n                    isActive={id === activeQuickStartID}\n                    status={getQuickStartStatus(allQuickStartStates, id)}\n                  />\n                </GalleryItem>\n              );\n            })}\n        </Gallery>\n      </PageSection>\n    </>\n  );\n\n  const clearFilters = () => {\n    clearQuickStartFilters();\n    setFilteredQuickStarts(quickStarts.sort(sortFnc));\n  };\n\n  return (\n    <>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component=\"h1\">Resources</Text>\n        </TextContent>\n      </PageSection>\n      <Divider component=\"div\" />\n      <PageSection\n        padding={{\n          default: \"noPadding\",\n        }}\n      >\n        <Toolbar usePageInsets>\n          <ToolbarContent>\n            <QuickStartCatalogFilterSearchWrapper\n              onSearchInputChange={onSearchInputChange}\n            />\n            <QuickStartCatalogFilterCountWrapper\n              quickStartsCount={filteredQuickStarts.length}\n            />\n          </ToolbarContent>\n        </Toolbar>\n      </PageSection>\n      <Divider component=\"div\" />\n      {filteredQuickStarts.length === 0 ? (\n        <PageSection>\n          <QuickStartCatalogEmptyState clearFilters={clearFilters} />\n        </PageSection>\n      ) : filteredQuickStarts.length !== quickStarts.length ? (\n        <PageSection>\n          <QuickStartCatalog quickStarts={filteredQuickStarts} />\n        </PageSection>\n      ) : (\n        CatalogWithSections\n      )}\n    </>\n  );\n};\n\nconst QuickStartCatalogFederated: FunctionComponent = () => (\n  <QuickStartsLoader>\n    {(quickStarts: GuidesQuickStart[], loaded: boolean) =>\n      loaded ? (\n        <MasQuickStartCatalog quickStarts={quickStarts} />\n      ) : (\n        <LoadingBox />\n      )\n    }\n  </QuickStartsLoader>\n);\n\nexport default QuickStartCatalogFederated;\n"],"sourceRoot":""}