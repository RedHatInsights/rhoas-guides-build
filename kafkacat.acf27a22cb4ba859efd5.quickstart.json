{"apiVersion":"console.openshift.io/v1","kind":"QuickStarts","metadata":{"name":"kafkacat"},"spec":{"version":0.1,"displayName":"Using Kafkacat with bf2","durationMinutes":10,"icon":"","description":"<div id=\"description_kafkacat\" class=\"paragraph\">\n<p>Learn how to use Kafkacat to interact with a bf2 Kafka instance.</p>\n</div>","prerequisites":["A running Kafka instance (see the Getting Started Guide)","A command line/terminal"],"introduction":"<div id=\"introduction_kafkacat\" class=\"paragraph\">\n<p>Welcome to the bf2 Kafkacat Guide.</p>\n</div>","tasks":["<div class=\"sect1\">\n<h2 id=\"task-1_kafkacat\">Download and Install Kafkacat</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Kafkacat is a generic producer and consumer tool for Apache Kafka. You can use Kafkacat to, for example, test and debug your bf2 Kafka instances.\nWith Kafkacat you can produce message to, and consume message from, your Kafka instance directly from your terminal.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nKafkacat is an open-source community tool. It&#8217;s not a part of bf2 and therefore not supported by Red Hat.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>If you already have Kafkacat installed on your system, you can continue to the next task of this tutorial.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>tbd</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>Open the <a href=\"https://github.com/edenhill/kafkacat\">Kafkacat github repository</a> in a browser tab, and follow the <a href=\"https://github.com/edenhill/kafkacat#install\">installation instructions</a> for your operating system.</p>\n</li>\n<li>\n<p>With Kafkacat installed, execute <code>kafkacat -V</code>. If you&#8217;ve installed Kafkacat correctly, this will print the version of Kafkacat in your terminal.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kafkacat -V\n\nkafkacat - Apache Kafka producer and consumer tool\nhttps://github.com/edenhill/kafkacat\nCopyright (c) 2014-2019, Magnus Edenhill\nVersion 1.6.0 (JSON, Avro, Transactions, librdkafka 1.6.1 builtin.features=gzip,snappy,ssl,sasl,regex,lz4,sasl_gssapi,sasl_plain,sasl_scram,plugins,zstd,sasl_oauthbearer)</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Verification</div>\n<ol class=\"arabic\">\n<li>\n<p>Execute <code>kafkcat -V</code> in your terminal. This should print the Kafkacat version information.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>","<div class=\"sect1\">\n<h2 id=\"task-2_kafkacat\">Producing messages</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Kafkacat is an easy to use command line tool to quickly produce messages to, and consume messages from, Apache Kafka.\nMessages can produced in various ways, for example by reading them from <em>stdin</em>, reading them from _syslog, reading them from a file, etc.</p>\n</div>\n<div class=\"paragraph\">\n<p>In this task you will produce messages by simply typing them in the terminal. You can find more examples <a href=\"https://github.com/edenhill/kafkacat#examples\">here</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Configuration of Kafkacat, for example the location of the Kafka bootstrap server, the authentication scheme, etc. can be set on the command line or configured in a file.\nIn this task you will specify configuration settings on the command line. Information on how to specify these configuration settings in a configuration file can be found <a href=\"https://github.com/edenhill/kafkacat#configuration\">here</a>.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>Kafkacat installed on your system.</p>\n</li>\n<li>\n<p>A running bf2 Kafka instance.</p>\n</li>\n<li>\n<p>The bootstrap server location of your Kafka instance.</p>\n</li>\n<li>\n<p>The credentials of the Service Account to authenticate against the Kafka instance.</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>Get the Bootstrap Server host and port of your bf2 Kafka instance. In the <em>Getting Started Guide</em> we&#8217;ve explained where you can find this information. To quickly recap:</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>Navigate to the bf2 environment.</p>\n</li>\n<li>\n<p>In the Kafka instance table, click on the kebab/three-dot menu icon of your Kafka and select <code>Connect to instance</code>.</p>\n</li>\n<li>\n<p>Copy the <em>Bootstrap Server</em> hostname and port to your clipboard.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Set the <em>Bootstrap_Server</em> as an environment variable in your terminal by executing the following command in your terminal, replacing &lt;BOOTSTRAP_SERVER&gt; with the value for your Kafka instance that you&#8217;ve just copied to your clipboard.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ export BOOTSTRAP_SERVER=&lt;BOOTSTRAP_SERVER&gt;</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Get the credentials (<em>Client ID</em> and <em>Secret</em>) of your Kafka instance. You&#8217;ve created the Service Account in the <em>Getting Started Guide</em>. If you haven&#8217;t created a Service Account yet, or you if you lost the credentials, generate a new set of credentials from the same UI that you&#8217;ve just copied the <em>Bootstrap Server</em> host by clicking the <code>Generate credential</code> button.</p>\n</li>\n<li>\n<p>Set the credentials as environment variables in your terminal by executing the following command in your terminal, replacing &lt;CLIENT_ID&gt; and &lt;CLIENT_SECRET&gt; with the values for your Kafka instance.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ export USER=&lt;CLIENT_ID&gt;\n$ export PASSWORD=&lt;CLIENT_SECRET&gt;</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Start Kafkacat in <em>producer</em> mode. You will use the SASL/PLAIN authentication mechanism. The command uses the environment variables we&#8217;ve set earlier. Note that you will be producing messages to the <em>my-topic</em> topic that you&#8217;ve created in the <em>Getting Started Guide</em>. If this topic does not exist yet, it will be automatically created with default settings. Execute the following command, you will not see any output.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kafkacat -t my-topic -b \"$BOOTSTRAP_SERVER\" \\\n -X security.protocol=SASL_SSL -X sasl.mechanisms=PLAIN \\\n -X sasl.username=\"$USER\" \\\n -X sasl.password=\"$PASSWORD\" -P</code></pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nbf2 supports the SASL/OAUTHBEARER mechanism for authentication, which is the recommended authentication mechanism to use, and superior to SASL/PLAIN. Unfortunately, Kafkacat does not yet fully support OAUTHBEARER, which is why in this example, you&#8217;re using SASL/PLAIN.\n</td>\n</tr>\n</table>\n</div>\n</li>\n<li>\n<p>With Kafkacat running, you can produce messages by simply typing the message values in the terminal. The following will produce 3 messages to your topic.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">First message\nSecond message\nThird message</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Keep the producer open. We will use this producer again in one of the following tasks.</p>\n</li>\n</ol>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Verification</div>\n<ol class=\"arabic\">\n<li>\n<p>You&#8217;ve a Kafkacat producer running without any errors printed to your console.</p>\n</li>\n<li>\n<p>No errors were printed to the console when you sent the 3 messages.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>","<div class=\"sect1\">\n<h2 id=\"task-3_kafkacat\">Consuming messages</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Apart from producing messages, Kafkacat can also be used to consume messages.\nTo consume messages, you simply need to run Kafkacat in <em>consumer</em> mode, which is simply doing by using the <code>-C</code> (consumer) switch on the command rather than the <code>-P</code> (producer) switch you used in the previous task.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>Kafkacat installed on your system.</p>\n</li>\n<li>\n<p>A running bf2 Kafka instance.</p>\n</li>\n<li>\n<p>The bootstrap server location of your Kafka instance.</p>\n</li>\n<li>\n<p>The credentials of the Service Account to authenticate against the Kafka instance.</p>\n</li>\n<li>\n<p>Messages produced to the <code>my-topic</code> topic as described in the previous task.</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>Using the information retrieved in the previous task, like the <em>Bootstrap Server</em> of your bf2 Kafka instance and credentials, set the environment variables BOOTSTRAP_SERVER, USER and PASSWORD like you did in the previous task.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ export BOOTSTRAP_SERVER=&lt;BOOTSTRAP_SERVER&gt;\n$ export USER=&lt;CLIENT_ID&gt;\n$ export PASSWORD=&lt;CLIENT_SECRET&gt;</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Start Kafkacat in <em>consumer</em> mode. You will consume messages from the same topic, <code>my-topic</code> that you produced messages to in the previous task Note that you will be producing messages to the <em>my-topic</em> topic that you&#8217;ve created in the <em>Getting Started Guide</em>. Execute the following command. You should see the 3 messages you produced in the previous task.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kafkacat -t my-topic -b \"$BOOTSTRAP_SERVER\" \\\n -X security.protocol=SASL_SSL -X sasl.mechanisms=PLAIN \\\n -X sasl.username=\"$USER\" \\\n -X sasl.password=\"$PASSWORD\" -C\nFirst message\nSecond message\nThird message\n% Reached end of topic my-topic [0] at offset 3</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>The Kafkacat consumer has consumed the 3 messages you&#8217;ve sent to the topic earlier, and prints that is has reached the end of <em>partition 0</em> of the <code>my-topic</code> topic. Keep the consumer, as you will use it in the next task.</p>\n</li>\n</ol>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Verification</div>\n<ol class=\"arabic\">\n<li>\n<p>You&#8217;ve a Kafkacat consumer running without any errors printed to your console.</p>\n</li>\n<li>\n<p>Kafkacat consumed the 3 messages you&#8217;ve sent to the <code>my-topic</code> topic in the previous task.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>","<div class=\"sect1\">\n<h2 id=\"task-4_kafkacat\">This needs a proper title</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Now that you&#8217;ve produced and consumed some messages, and have your Kafkacat producer and Kafkacat consumer still running, we can produce and consume some more messages.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>A Kafkacat producer running and connected to your bf2 Kafka instance, producing to your <code>my-topic</code> topic.</p>\n</li>\n<li>\n<p>A Kafkacat consumer running and connected to your bf2 Kafka instance, consuming from your <code>my-topic</code> topic.</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>In your terminal with the running Kafkacat producer, send the following message.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">My own messsage</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Switch to the terminal in which you have your Kafkacat consumer running. You should see your message being consumed.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">First message\nSecond message\nThird message\n% Reached end of topic my-topic [0] at offset 3\nMy own message\n% Reached end of topic my-topic [0] at offset 4</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Produce some more messages to your bf2 Kafka instance and see how they are being consumed by your Kafkacat consumer.</p>\n</li>\n</ol>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Verification</div>\n<ol class=\"arabic\">\n<li>\n<p>You&#8217;ve produced the <em>My own message</em> to your <code>my-topic</code> Kafka topic without errors.</p>\n</li>\n<li>\n<p>The <em>My own message</em> was successfully consumed by your Kafkacat consumer.</p>\n</li>\n</ol>\n</div>\n<div id=\"conclusion_kafkacat\" class=\"paragraph\">\n<p>Congratulations! You&#8217;ve successfully completed the bf2 Kafkacat Guide, and are now ready to produce message to, and consume messages from, the service.</p>\n</div>\n</div>\n</div>"],"conclusion":"<div id=\"conclusion_kafkacat\" class=\"paragraph\">\n<p>Congratulations! You&#8217;ve successfully completed the bf2 Kafkacat Guide, and are now ready to produce message to, and consume messages from, the service.</p>\n</div>","nextQuickStart":["kafka-bin-scripts","quarkus-kafka"]}}