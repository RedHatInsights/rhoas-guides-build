{"apiVersion":"console.openshift.io/v1","kind":"QuickStarts","metadata":{"name":"kafka-quarkus-dev","annotations":{"draft":false,"order":2}},"spec":{"version":0.1,"type":{"text":"Quick start","color":"green"},"displayName":"Using Quarkus applications with Kafka instances in Red Hat OpenShift Streams for Apache Kafka","durationMinutes":10,"icon":"","description":"<div id=\"description\" class=\"paragraph\">\n<p>Learn how to use Quarkus applications to produce messages to and consume messages from a Kafka instance in Red Hat OpenShift Streams for Apache Kafka.</p>\n</div>","prerequisites":["A running Kafka instance (see the Getting Started quick start)","A command-line terminal application","Git","An IDE","JDK 11 or later","Apache Maven 3.6.2 or later"],"introduction":"<div id=\"introduction\" class=\"paragraph\">\n<p>Welcome to the Red Hat OpenShift Streams for Apache Kafka Quarkus quick start. In this quick start, you&#8217;ll learn how to use <a href=\"https://quarkus.io/\" target=\"_blank\" rel=\"noopener\">Quarkus</a> to produce messages to and consume messages from your Kafka instances in OpenShift Streams for Apache Kafka.</p>\n</div>","tasks":["<div class=\"sect1\">\n<h2 id=\"proc-importing-quarkus-sample-code_using-quarkus\">Importing the Quarkus sample code</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>For this quick start, you&#8217;ll use the Quarkus sample code from the OpenShift Streams for Apache Kafka <a href=\"https://github.com/redhat-developer/app-services-guides\" target=\"_blank\" rel=\"noopener\">Guides and Samples</a> repository in GitHub. After you understand the concepts and tasks in this quick start, you can use your own Quarkus applications with OpenShift Streams for Apache Kafka in the same way.</p>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>On the command line, clone the OpenShift Streams for Apache Kafka <a href=\"https://github.com/redhat-developer/app-services-guides\" target=\"_blank\" rel=\"noopener\">Guides and Samples</a> repository from GitHub.</p>\n<div class=\"listingblock\">\n<div class=\"title\">Cloning the guides and samples repository</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code>git clone https://github.com/redhat-developer/app-services-guides guides</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>In your IDE, import the <code>code-examples/quarkus-kafka-quickstart</code> directory from the repository that you cloned.</p>\n</li>\n</ol>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Verification</div>\n<ul>\n<li>\n<p>Is the Quarkus example application imported into your IDE?</p>\n</li>\n</ul>\n</div>\n</div>\n</div>","<div class=\"sect1\">\n<h2 id=\"proc-configuring-quarkus_using-quarkus\">Configuring the Quarkus example application to connect to a Kafka instance</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>To enable your Quarkus application to access a Kafka instance, configure the connection using the bootstrap server endpoint, the generated credentials for your OpenShift Streams for Apache Kafka service account, and the SASL/OAUTHBEARER token endpoint for the Kafka instance. For Quarkus, you can configure connection information by using the <code>application.properties</code> configuration file. The example in this task sets environment variables and then references them in the  <code>application.properties</code> file.</p>\n</div>\n<div class=\"paragraph\">\n<p>Quarkus applications use <a href=\"https://github.com/eclipse/microprofile-reactive-messaging\" target=\"_blank\" rel=\"noopener\">MicroProfile Reactive Messaging</a> to produce messages to and consume messages from your Kafka instances in OpenShift Streams for Apache Kafka. For more information about Quarkus configuration options for Kafka and Reactive Messaging, see <a href=\"https://quarkus.io/guides/kafka\" target=\"_blank\" rel=\"noopener\">Using Apache Kafka with Reactive Messaging</a> in the Quarkus documentation.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>You have the bootstrap server endpoint, the service account credentials, and the SASL/OAUTHBEARER token endpoint for the Kafka instance. You copied this information previously for the Kafka instance in OpenShift Streams for Apache Kafka by selecting the options menu (three vertical dots) and clicking <strong>View connection information</strong>.</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>On the command line, enter the following commands to set the Kafka instance bootstrap server and client credentials as environment variables to be used by Quarkus or other applications. Replace the values with your own server and credential information.</p>\n<div class=\"listingblock\">\n<div class=\"title\">Setting environment variables for server and credentials</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code>export BOOTSTRAP_SERVER=<em>&lt;bootstrap_server&gt;</em>\nexport CLIENT_ID=<em>&lt;client_id&gt;</em>\nexport CLIENT_SECRET=<em>&lt;client_secret&gt;</em>\nexport OAUTH_TOKEN_ENDPOINT_URI=<em>&lt;oauth_token_endpoint_uri&gt;</em></code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>In the Quarkus example application, review the <code>src/main/resources/application.properties</code> file to understand how the environment variables you set in the previous step are used in your application. We are going to use <code>dev</code> configuration profile from the application.properties</p>\n</li>\n</ol>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Verification</div>\n<ul>\n<li>\n<p>Did you set environment variables for the Kafka instance?</p>\n</li>\n</ul>\n</div>\n</div>\n</div>","<div class=\"sect1\">\n<h2 id=\"proc-create-prices-topic_using-quarkus\">Creating the prices Kafka topic in OpenShift Streams for Apache Kafka</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>For this quick start, the Kafka topic that the Quarkus example application references is called <code>prices</code>. You need to create this topic in OpenShift Streams for Apache Kafka so that the Quarkus application can interact with it.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>You&#8217;ve created a Kafka instance in OpenShift Streams for Apache Kafka and the instance is in <strong>Ready</strong> state.</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>In the <strong>Streams for Apache Kafka</strong> page of the web console, select the name of the Kafka instance that you want to add a topic to.</p>\n</li>\n<li>\n<p>Click <strong>Create topic</strong> and follow the guided steps to define the topic details. Click <strong>Next</strong> to complete each step and click <strong>Finish</strong> to complete the setup.</p>\n<div class=\"imageblock screencapture\">\n<div class=\"content\">\n<img src=\"sak-create-topic.png\" alt=\"Image of wizard to create a topic\">\n</div>\n<div class=\"title\">Figure 1. Guided steps to define topic details</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Topic name</strong>: Enter <code>prices</code> as the topic name.</p>\n</li>\n<li>\n<p><strong>Partitions</strong>: Set the number of partitions for this topic. This example sets the partition to <code>1</code> for a single partition. Partitions are distinct lists of messages within a topic and enable parts of a topic to be distributed over multiple brokers in the cluster. A topic can contain one or more partitions, enabling producer and consumer loads to be scaled.</p>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nYou can increase the number of partitions later, but you cannot decrease them.\n</td>\n</tr>\n</table>\n</div>\n</li>\n<li>\n<p><strong>Message retention</strong>: Set the message retention time to the relevant value and increment. This example sets the retention to <code>7 days</code>. Message retention time is the amount of time that messages are retained in a topic before they are deleted or compacted, depending on the cleanup policy.</p>\n<div class=\"paragraph\">\n<p>After you complete the topic setup, the new Kafka topic is listed in the topics table. You can now run the Quarkus application to start producing and consuming messages to and from this topic.</p>\n</div>\n</li>\n</ul>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Verification</div>\n<ul>\n<li>\n<p>Is the new Kafka topic <code>prices</code> listed in the topics table?</p>\n</li>\n</ul>\n</div>\n</div>\n</div>","<div class=\"sect1\">\n<h2 id=\"proc-running-quarkus-example-application_using-quarkus\">Running the Quarkus example application</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>After you configure your Quarkus application to connect to a Kafka instance and you create the Kafkat topic, you can run the Quarkus application to start producing and consuming messages to and from the topic.</p>\n</div>\n<div class=\"paragraph\">\n<p>The Quarkus example application in this quick start has three application-scoped beans:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>One bean generates a random number between 0 and 100 and produces it to a Kafka topic.</p>\n</li>\n<li>\n<p>Another bean consumes the number from the Kafka topic.</p>\n</li>\n<li>\n<p>A final bean exposes the number as a REST UI (using Server Sent events).</p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Prerequisites</div>\n<ul>\n<li>\n<p>You&#8217;ve configured the Quarkus example application to connect to the Kafka instance.</p>\n</li>\n<li>\n<p>You&#8217;ve created the <code>prices</code> example Kafka topic.</p>\n</li>\n</ul>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Procedure</div>\n<ol class=\"arabic\">\n<li>\n<p>On the command line, navigate to the <code>code-examples/quarkus-kafka-quickstart</code> directory that you imported and enter the following commands to run the Quarkus example application.</p>\n<div class=\"listingblock\">\n<div class=\"title\">Running the Quarkus example application</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code>$ cd ./code-examples/quarkus/kafka-quickstart\n$ ./mvnw quarkus:dev</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>After the application is running, in a web browser, go to <a href=\"http://localhost:8080/prices.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/prices.html</a> and verify that the <code>Last price</code> is updated.</p>\n<div class=\"paragraph\">\n<p>If the Quarkus application fails to run, review the error log in the terminal and address any problems. Also review the steps in this quick start to ensure that the Quarkus application and Kafka topic are configured correctly.</p>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Verification</div>\n<ul>\n<li>\n<p>Did the Quarkus example application run without any errors?</p>\n</li>\n<li>\n<p>At <a href=\"http://localhost:8080/prices.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/prices.html</a>, is the <code>Last price</code> updated?</p>\n</li>\n</ul>\n</div>\n<div id=\"conclusion\" class=\"paragraph\">\n<p>Congratulations! You successfully completed the OpenShift Streams for Apache Kafka Quarkus quick start, and are now ready to use your own Quarkus applications with OpenShift Streams for Apache Kafka.</p>\n</div>\n</div>\n</div>"],"conclusion":"<div id=\"conclusion\" class=\"paragraph\">\n<p>Congratulations! You successfully completed the OpenShift Streams for Apache Kafka Quarkus quick start, and are now ready to use your own Quarkus applications with OpenShift Streams for Apache Kafka.</p>\n</div>","nextQuickStart":["service-binding"]}}